{"version":3,"sources":["tools/styles.js","components/Header.jsx","tools/fetchService.js","tools/enums.js","components/Person.jsx","components/Status.jsx","components/List.jsx","components/Sort.jsx","components/CurrentSorting.jsx","components/Viewer.jsx","App.js","index.js"],"names":["fontSize","color","marginLeft","width","height","outline","border","background","display","flexDirection","alignItems","alignContent","marginBottom","marginRight","Header","props","id","data-testid","style","styles","axios","get","fetch","Object","freeze","DONE","ERROR","RUNNING","STOPPED","sorting","AtoZ","ZtoA","AMOUNT_ASC","AMOUNT_DES","Person","title","name","amount","List","names","useState","results","setResults","orderByNameAscending","sort","a","b","Length","length","TotalAmount","total","forEach","Names","enums","map","person","Search","type","placeholder","value","onClick","search","document","getElementById","res","filter","toLowerCase","includes","handleSearch","Sort","setSorting","CurrentSorting","Viewer","fetchState","setFetchState","setNames","Fetch","fetchService","then","response","data","err","onFetch","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ffbbb4f.chunk.js","sourcesContent":["\n// Author:              Antti Aarnio || RedFoxFinn\n// Project:             solita_academy_names\n// Description:         Solita Dev Academy programming assignment prior to applying\n// File:                styles.js\n// File description:    styles is a self-made tool to provide inline styling for React components\n\n//   Function definitions for styling tool\n\nconst platform = () => {\n    return {\n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        alignContent: 'center'\n    };\n};\n\nconst sortings = () => {\n    return {\n        marginLeft: '1em', \n        marginRight: '1em', \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        alignContent: 'center'\n    };\n};\n\nconst inline = () => {\n    return {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        alignContent: 'center'\n    };\n};\n\nconst person = () => {\n    return {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center', \n        alignContent: 'center', \n        height: '4em'\n    };\n};\n\nconst appName = () => {\n    return {\n        fontSize: '3em', \n        color: 'black'\n    };\n};\n\nconst personName = () => {\n    return {\n        fontSize: '2.5em', \n        color: 'black'\n    };\n};\n\nconst authorName = () => {\n    return {\n        fontSize: '1em', \n        color: 'grey'\n    };\n};\n\nconst text = () => {\n    return {\n        fontSize: '1em', \n        color: 'black'\n    };\n};\n\nconst textL = () => {\n    return {\n        fontSize: '1.5em', \n        color: 'black'\n    };\n};\n\nconst success = () => {\n    return {\n        fontSize: '1em', \n        color: 'forestgreen'\n    };\n};\n\nconst failure = () => {\n    return {\n        fontSize: '1em', \n        color: '#dc4233'\n    };\n};\n\nconst running = () => {\n    return {\n        fontSize: '1em', \n        color: 'darkblue'\n    };\n};\n\nconst selection = () => {\n    return {\n        fontSize: '1.5em', \n        color: '#dc4233'\n    };\n};\n\nconst sortingButton = () => {\n    return {\n        marginBottom: '0.5em', \n        width: '12em', \n        height: '2em', \n        outline: '1px solid #dc4233', \n        border: '1px solid transparent', \n        background: 'transparent'\n    };\n};\n\nconst fetchingButton = () => {\n    return {\n        marginLeft: '1em', \n        width: '6em', \n        height: '2em', \n        outline: '1px solid #dc4233', \n        border: '1px solid transparent', \n        background: 'transparent'\n    };\n};\n\nconst searchButtons = () => {\n    return {\n        marginLeft: '1em', \n        width: '8em', \n        height: '2em', \n        outline: '1px solid #dc4233', \n        border: '1px solid transparent', \n        background: 'transparent'\n    };\n};\n\nconst searchField = () => {\n    return {\n        width: '12em', \n        height: '1em', \n        outline: '1px solid #dc4233', \n        border: '1px solid transparent', \n        background: 'transparent'\n    };\n};\n\n//   styling tool exporting\n\nexport default {\n    appName, authorName, failure, fetchingButton, inline, platform, person, personName, \n    running, searchButtons, searchField, selection, sortingButton, sortings, success, text, textL\n};","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        Header.jsx\n\n// imports\n\nimport React from 'react';\n\nimport styles from '../tools/styles';\n\n// Defining the component\n\nconst Header = (props) => <div id={props.id} data-testid={props.id} style={styles.inline()}>\n    <p id={`${props.id}-appName`} data-testid={`${props.id}-appName`} style={styles.appName()}>Names</p>\n    <p id={`${props.id}-authorName`} data-testid={`${props.id}-authorName`} style={styles.authorName()}>by RedFoxFinn</p>\n</div>;\n\n// Defining the component exporting\n\nexport default Header;","\n// Author:              Antti Aarnio || RedFoxFinn\n// Project:             solita_academy_names\n// Description:         Solita Dev Academy programming assignment prior to applying\n// File:                fetchService.js\n// File description:    fetchService is Axios based service for requesting data\n\n// imports\n\nimport axios from 'axios';\n\n// Function definitions\n// fetchNames is the function for fetching the name/amount-pair data.\n\nconst fetchNames = () => axios.get('https://raw.githubusercontent.com/solita/dev-academy-2021/main/names.json');\n\n// Defining the fetchService exporting\n\nexport default {names: fetchNames};","\n// Author:              Antti Aarnio || RedFoxFinn\n// Project:             solita_academy_names\n// Description:         Solita Dev Academy programming assignment prior to applying\n// File:                Header.jsx\n// File description:    enums is a self-made and simple tool that provides enum-like functionality to application.\n\n// Object definitions\n// fetch provides status messages for the data fetching status display.\n// sorting provides status & mode messages for the data sorting functionalities.\n\nconst fetch = Object.freeze({\n    DONE: 'done',\n    ERROR: 'error',\n    RUNNING: 'running',\n    STOPPED: 'stopped'\n});\n\nconst sorting = Object.freeze({\n    AtoZ: 'by name, ascending',\n    ZtoA: 'by name, descending',\n    AMOUNT_ASC: 'by amount, ascending',\n    AMOUNT_DES: 'by amount, descending'\n});\n\n// Defining the enums exporting\n\nexport default {\n    fetch, sorting\n};","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        Person.jsx\n\n// imports\n\nimport React from 'react';\n\nimport styles from '../tools/styles';\n\n//   Defining the component\n//   Essentially Person is a list item with styles\n\nconst Person = (props) => <li id={props.id} data-testid={props.id} key={`${props.id}-${props.name}`} style={styles.person()} \n  title={`Name: ${props.name}\\n Amount: ${props.amount}`} >\n  <p key={`${props.id}-name`} style={styles.personName()}>{props.name}</p>\n  <p key={`${props.id}-amount`} style={styles.authorName()}>{props.amount}</p>\n</li>;\n\n//   Defining the component exporting\n\nexport default Person;","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        Status.jsx\n\n// imports\n\nimport React from 'react';\n\nimport styles from '../tools/styles';\n\n//   Defining the status-components\n//   Nope is the component that'll be shown if the data fetching isn't done yet.\n//   Error is the component that'll be shown if the data fetching responds error.\n//   Running is the component that'll be shown if the data fetching is being executed.\n//   NoResults is the component thatäll be shown if the amount searching by the name doesn't find any matches.\n\nconst Nope = (props) => <div id={props.id} data-testid={props.id} style={{}}>\n    <p style={styles.failure()}>You need to fetch the names . . .</p>\n</div>;\n\nconst Error = (props) => <div id={props.id} data-testid={props.id} style={styles.platform()}>\n    <p style={styles.failure()}>Error occured while fetching the names . . .</p>\n    <p style={styles.failure()}>Please try again</p>\n</div>;\n\nconst Running = (props) => <div id={props.id} data-testid={props.id} style={{}}>\n    <p style={styles.running()}>Fetching the names . . .</p>\n</div>;\n\nconst NoResults = (props) => <div id={props.id} data-testid={props.id} style ={{}}>\n    <p style={styles.failure()} >With name '{props.name}' we couldn't find any results</p>\n</div>;\n\n//   Defining the component exporting.\n\nexport default {Nope, Error, Running, NoResults};","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        List.jsx\n\n// imports\n\nimport React, {useState} from 'react';\n\nimport styles from '../tools/styles';\nimport enums from '../tools/enums';\nimport Person from './Person';\nimport status from './Status';\n\n// Defining the component\n\nconst List = (props) => {\n    let names = props.names;\n    const [results, setResults] = useState(null);\n\n    //   Helper functions for sorting the received data\n\n    const orderByNameAscending = () => {\n        names = names.sort((a,b) => a.name > b.name ? 1 : (b.name > a.name ? -1 : 0));\n    };\n    const orderByNameDescending = () => {\n        names = names.sort((a,b) => b.name > a.name ? 1 : (a.name > b.name ? -1 : 0));\n    };\n    const orderByAmountAscending = () => {\n        names = names.sort((a,b) => a.amount > b.amount ? 1 : (b.amount > a.amount ? -1 : 0));\n    };\n    const orderByAmountDescending = () => {\n        names = names.sort((a,b) => b.amount > a.amount ? 1 : (a.amount > b.amount ? -1 : 0));\n    };\n\n    //   Defining the subcomponents\n    //   Length displays the count of entries on received data.\n    //   TotalAmount displays the sum of the amounts on name/amount-pairs of the data.\n    //   Names is the subcomponent that displays the list of name/amount-pairs of the data or the search results\n    // or the status message if the search didn't find any matches.\n\n    const Length = ({id}) => {\n        return <div id={id} data-testid={id} style={styles.inline()}>\n            <p style={styles.success()}>Total amount of names: <strong>{names.length}</strong></p>\n        </div>;\n    };\n\n    const TotalAmount = ({id}) => {\n        let total = 0;\n        names.forEach(name => {\n            total += name.amount;\n        });\n        return <div id={id} data-testid={id} style={styles.inline()}>\n            <p style={styles.success()}>Total amount from names: <strong>{total}</strong></p>\n        </div>;\n    };\n\n    const Names = ({id}) => {\n        switch (props.sorting) {\n            case enums.sorting.AtoZ: {\n                orderByNameAscending();\n                break;\n            }\n            case enums.sorting.ZtoA: {\n                orderByNameDescending();\n                break;\n            }\n            case enums.sorting.AMOUNT_ASC: {\n                orderByAmountAscending();\n                break;\n            }\n            case enums.sorting.AMOUNT_DES: {\n                orderByAmountDescending();\n                break;\n            }\n            default: {\n                orderByNameAscending();\n            }\n        }\n\n        return results \n          ? results.length > 0 \n            ? <ul id={`${id}-search`} data-testid={`${id}-search`} style={styles.platform()} >\n                {results.map(person => <Person name={person.name} amount={person.amount} id={`${props.id}-person`} />)}\n            </ul> \n            : <status.NoResults id={`${id}-noResults`}/>\n          : <ul id={`${id}-list`} data-testid={`${id}-list`} style={styles.platform()}>\n              {names.map(person => <Person name={person.name} amount={person.amount} id={`${props.id}-person`} />)}\n          </ul>;\n    };\n\n    //   Helper functions for searching amount from name/amount -pairs by the given string (name or part of a name)\n    //   handleSearch-function executes the actual searching. resetSearch-function executes the actual reset.\n\n    const handleSearch = () => {\n        setResults([]);\n        const search = document.getElementById(`${props.id}-search-searchByName`).value;\n        const res = names.filter(person => person.name.toLowerCase().includes(search.toLowerCase()));\n        setResults(res);\n    };\n\n    const resetSearch = () => {\n        document.getElementById(`${props.id}-search-searchByName`).value = '';\n        setResults(null);\n    };\n\n    //   Defining the subcomponent, Search. Rendered as header row, text input and two buttons. \n    //   Header row consists of two text elements with different styles.\n    //   Input is used for searching certain amounts, by name.\n    //   searchAmounts-button executes the search. resetSearch-button resets the search.\n\n    const Search = ({id}) => <div id={id} data-testid={id} style={styles.platform()} >\n        <div id={`${id}-header`} data-testid={`${id}-header`} style={styles.inline()} >\n            <p style={styles.textL()} >Search</p>\n            <p style={styles.authorName()} >by name</p>\n        </div>\n        <div id={`${id}-searchBar`} data-testid={`${id}-searchBar`} style={styles.inline()} >\n            <input id={`${id}-searchByName`} data-testid={`${id}-searchByName`} type='text' style={styles.searchField()} \n                placeholder='type name for search' />\n            <input id={`${id}-searchAmounts`} data-testid={`${id}-searchAmounts`} type='button' style={styles.searchButtons()} \n                value='search amounts' onClick={() => handleSearch()} />\n            <input id={`${id}-resetSearch`} data-testid={`${id}-resetSearch`} type='button' style={styles.searchButtons()} \n                value='reset search' onClick={() => resetSearch()} />\n        </div>\n    </div>;\n\n    //   Returned element for the rendering\n\n    return props.names && <div id={props.id} data-testid={props.id} style={styles.platform()}>\n        <Length id={`${props.id}-datasetSize`} />\n        <TotalAmount id={`${props.id}-totalAmount`} />\n        <Search id={`${props.id}-search`} />\n        <Names id={`${props.id}-nameList`} />\n    </div>;\n};\n\n//   Defining the component exporting\n\nexport default List;","import React from 'react';\n\nimport styles from '../tools/styles';\nimport enums from '../tools/enums';\n\n    // Sort is the component that'll display the sorting functionalities of the name/amount-pairs\n    // if the data has been fetched. Sort has four sorting options to use, two by name and two by amount.\n    // Name and amount options have both ascending and descending options.\n\nconst Sort = ({id, setSorting}) => <div id={id} data-testid={id} style={styles.inline()} >\n    <div style={styles.sortings()} >\n        <div style={styles.inline()} >\n            <p style={styles.textL()} >Sort</p>\n            <p style={styles.authorName()} >by name</p>\n        </div>\n        <button id={`${id}-nameAscending`} data-testid={`${id}-nameAscending`} style={styles.sortingButton()} onClick={() => setSorting(enums.sorting.AtoZ)}>Name, &#8593;</button>\n        <button id={`${id}-nameDescending`} data-testid={`${id}-nameDescending`} style={styles.sortingButton()} onClick={() => setSorting(enums.sorting.ZtoA)}>Name, &#8595;</button>\n    </div>\n    <div style={styles.sortings()} >\n        <div style={styles.inline()} >\n            <p style={styles.textL()} >Sort</p>\n            <p style={styles.authorName()} >by amount</p>\n        </div>\n        <button id={`${id}-amountAscending`} data-testid={`${id}-amountAscending`} style={styles.sortingButton()} onClick={() => setSorting(enums.sorting.AMOUNT_ASC)}>Amount, &#8593;</button>\n        <button id={`${id}-amountDescending`} data-testid={`${id}-amountDescending`} style={styles.sortingButton()} onClick={() => setSorting(enums.sorting.AMOUNT_DES)}>Amount, &#8595;</button>\n    </div>\n</div>;\n\nexport default Sort;","import React from 'react';\n\nimport styles from '../tools/styles';\n\n//   CurrentSorting is the subcomponent that'll display the current sorting of name/amount-pairs \n// if the data has been fetched.\n\nconst CurrentSorting = ({id, sorting}) => <div id={id} data-testid={id} style={styles.inline()}>\n    <p style={styles.success()}>Current sorting: <strong>{sorting}</strong></p>\n</div>;\n\nexport default CurrentSorting;","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        Viewer.jsx\n\n// imports\n\nimport React, {useState} from 'react';\n\nimport styles from '../tools/styles';\nimport fetchService from '../tools/fetchService';\nimport enums from '../tools/enums';\nimport List from './List';\nimport status from './Status';\nimport Sort from './Sort';\nimport CurrentSorting from './CurrentSorting';\n\n//   Defining the component\n//   Viewer is responsible of returning for rendering all the other components other than the application header.\n\nconst Viewer = (props) => {\n    const [fetchState, setFetchState] = useState(enums.fetch.STOPPED);\n    const [names, setNames] = useState(null);\n    const [sorting, setSorting] = useState(enums.sorting.AtoZ);\n\n    //   Helper function for fetching the json-data from Solita GitHub.\n    //   onFetch uses fetchService, which is based on Axios HTTP-client.\n    //   onFetch alters the fetchState on executing and after the fetchService returns the response.\n    //   Based on the fetchState, correct status-component will be shown.\n\n    const onFetch = () => {\n        setFetchState(enums.fetch.RUNNING);\n        try {\n            fetchService.names().then((response) => setNames(response.data.names));\n            setFetchState(enums.fetch.DONE);\n        } catch (err) {\n            setFetchState(enums.fetch.ERROR);\n        }\n    };\n\n    //   Defining the subcomponents\n    //   Fetch is the subcomponent that'll be used for fetching the data. It uses onFetch-function to do so.\n\n    const Fetch = ({id}) => <div id={id} data-testid={id} style={styles.inline()}>\n        <p style={styles.text()}>Fetch names?</p>\n        <button id={`${id}-fetchButton`} data-testid={`${id}-fetchButton`} style={styles.fetchingButton()} onClick={() => onFetch()} >please do</button>\n    </div>;\n\n    //   Returned element for the rendering\n\n    return <div id={props.id} data-testid={props.id} style={styles.platform()}>\n        <Fetch id={`${props.id}-fetch`}/>\n        {names == null && fetchState === enums.fetch.RUNNING && <status.Running id={`${props.id}-status-run`}/>}\n        {names == null && fetchState === enums.fetch.STOPPED && <status.Nope id={`${props.id}-status-nope`}/>}\n        {names == null && fetchState === enums.fetch.ERROR && <status.Error id={`${props.id}-status-err`}/>}\n        {fetchState === enums.fetch.DONE && names && names != null && <Sort id={`${props.id}-sorting-selector`} setSorting={setSorting} />}\n        {fetchState === enums.fetch.DONE && names && names != null && <CurrentSorting id={`${props.id}-sorting-current`} sorting={sorting} />}\n        {fetchState === enums.fetch.DONE && names && names != null && <List id={`${props.id}-list`} names={names} sorting={sorting}/>}\n    </div>;\n};\n\n//   Defining the component exporting\n\nexport default Viewer;","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        App.js\n\n// imports\n\nimport React, {useState} from 'react';\n\nimport Header from './components/Header';\nimport Viewer from './components/Viewer';\nimport styles from './tools/styles';\n\n//   Defining the component\n//   App returns for rendering the complete application.\n\nconst App = (props) => <div id={props.id} data-testid={props.id} style={styles.platform()}>\n  <Header id={`${props.id}-header`}/>\n  <Viewer id={`${props.id}-viewer`}/>\n</div>;\n\n//   Defining the component exporting\n\nexport default App;\n","\n// Author:      Antti Aarnio || RedFoxFinn\n// Project:     solita_academy_names\n// Description: Solita Dev Academy programming assignment prior to applying\n// File:        index.js\n\n// imports\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//   Application rendering\n\nReactDOM.render(\n  <React.StrictMode>\n    <App id='sda-names' />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}